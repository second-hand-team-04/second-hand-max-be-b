name: secondhand

on:
  pull_request:
    branches:
      - release

permissions:
  contents: read

env:
  APPLICATION_FILE_PATH: ./src/main/resources/application.properties

jobs:
  app-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Create application.properties
        run: |
          touch ${{ env.APPLICATION_FILE_PATH }}
          echo "${{ secrets.APPLICATION }}" > ${{ env.APPLICATION_FILE_PATH }}
        shell: bash

      - name: Grant execute gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build gradle
        run: ./gradlew clean build
        shell: bash

      - name: Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/second-hand-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/second-hand-app

  deploy:
    needs: [app-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: copy nginx.conf file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "./nginx.conf"
          target: "/home/ec2-user/"

      - name: copy docker-compose-deploy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "docker-compose-deploy.yml"
          target: "/home/ec2-user/"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            sudo chmod 666 /var/run/docker.sock
            docker compose -f docker-compose-deploy.yml down -v
            docker compose -f docker-compose-deploy.yml pull
            docker compose -f docker-compose-deploy.yml up -d
            docker image prune -f
